-- Lentele Automobilis
CREATE TABLE dova7961.Automobilis (
    Automobilio_id        INTEGER    NOT NULL    GENERATED BY DEFAULT AS IDENTITY
                            (START WITH 1000 INCREMENT BY 1),
    Marke                 CHAR(32) NOT NULL,
    Modelis               CHAR(32) NOT NULL,
    Metai                 SMALLINT NOT NULL CONSTRAINT PagaminimoMetai
                                                            CHECK(Metai > 2000 AND Metai < EXTRACT(YEAR FROM CURRENT_DATE) + 1),
    Spalva                VARCHAR(20) DEFAULT 'Juoda',
    Kaina_uz_diena        DECIMAL(5,2) NOT NULL CONSTRAINT KainosDydis CHECK(Kaina_uz_diena > 0 AND Kaina_uz_diena < 1000),
    PRIMARY KEY (Automobilio_id)
);

-- Lentele Klientas
CREATE TABLE dova7961.Klientas (
    Kliento_nr            INTEGER    NOT NULL	GENERATED BY DEFAULT AS IDENTITY
    								 (START WITH 100 INCREMENT BY 1),
    Asmens_kodas          CHAR(11)    NOT NULL,
    Vardas                CHAR(12) NOT NULL,
    Pavarde               VARCHAR(20) NOT NULL,
    Tel_nr                VARCHAR(20) NOT NULL,
    PRIMARY KEY (Kliento_nr)
);

-- Lentele Nuomos_sutartis
CREATE TABLE dova7961.Nuomos_sutartis (
    Sutarties_nr          INTEGER    NOT NULL	GENERATED BY DEFAULT AS IDENTITY
    								 (START WITH 10 INCREMENT BY 1),
    Automobilis           INTEGER,
    Klientas              INTEGER,
    Pradzia               DATE,
    Pabaiga               DATE,
    PRIMARY KEY (Sutarties_nr),
    CONSTRAINT IAutomobili FOREIGN KEY (Automobilis) REFERENCES dova7961.Automobilis ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT IKlienta FOREIGN KEY (Klientas) REFERENCES dova7961.Klientas ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT SutartiesPabaiga CHECK (Pabaiga >= Pradzia)
);

-- Lentele Draudimas
CREATE TABLE dova7961.Draudimas (
    Draudimo_nr           INTEGER NOT NULL	GENERATED BY DEFAULT AS IDENTITY
    								 (START WITH 10000 INCREMENT BY 1),
    Sutartis              INTEGER,
    Draudejas             INTEGER,   
    Tipas                 VARCHAR(32) 
								  CONSTRAINT Tipai CHECK (Tipas IN ('Standartinis', 'Papildomas', 'Kasko'))    							  
    							  DEFAULT 'Standartinis',
    Kaina                 DECIMAL(5,2) NOT NULL CONSTRAINT DraudimoKainosDydis CHECK(Kaina > 0 AND Kaina < 500),
    CONSTRAINT BrangusDraudimas CHECK (Kaina < 200 OR Tipas = 'Kasko'),
    PRIMARY KEY (Draudimo_nr),
    CONSTRAINT ISutarti FOREIGN KEY (Sutartis) REFERENCES dova7961.Nuomos_sutartis ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT IDradeja FOREIGN KEY (Draudejas) REFERENCES dova7961.Draudejas ON DELETE RESTRICT ON UPDATE RESTRICT
);

-- Lentele Draudejas
CREATE TABLE dova7961.Draudejas (
    Imones_kodas          INTEGER     NOT NULL,
    Imone                 VARCHAR(20) NOT NULL,
    Tel_nr                VARCHAR(20) NOT NULL,
    PRIMARY KEY (Imones_kodas)
);

-- Indeksai
CREATE UNIQUE INDEX Unikalus_AK ON dova7961.Klientas(Asmens_kodas);
CREATE UNIQUE INDEX Unikalus_Kliento_tel_nr ON dova7961.Klientas(Tel_nr);
CREATE UNIQUE INDEX Unikalus_Draudejo_tel_nr ON dova7961.Draudejas(Tel_nr);

CREATE INDEX KainosIndeksas ON dova7961.Automobilis(Kaina_uz_diena);

-- Virtualios lenteles

-- Virtuali Audi lentele
CREATE VIEW Audi (Automobilio_id, Modelis, Metai, Spalva, Kaina_uz_diena)
	AS SELECT Automobilio_id, Modelis, Metai, Spalva, Kaina_uz_diena
		FROM dova7961.Automobilis WHERE Marke = 'Audi';

-- Virtuali moketinos sumos lentele
CREATE VIEW MoketinaSuma
	AS SELECT Nuomos_sutartis.Klientas AS Kliento_nr,
				 Klientas.Pavarde,
				 SUM((Nuomos_sutartis.Pabaiga - Nuomos_sutartis.Pradzia + 1) * Automobilis.Kaina_uz_diena + COALESCE(Draudimas.Kaina, 0)) AS Moketina_suma
FROM dova7961.Nuomos_sutartis
JOIN dova7961.Klientas ON Nuomos_sutartis.Klientas = Klientas.Kliento_nr
JOIN dova7961.Automobilis ON Nuomos_sutartis.Automobilis = Automobilis.Automobilio_id
LEFT JOIN dova7961.Draudimas ON Nuomos_sutartis.Sutarties_nr = Draudimas.Sutartis
GROUP BY Nuomos_sutartis.Klientas, Klientas.Pavarde;


-- VML

CREATE MATERIALIZED VIEW PopuliariausiAutomobiliai
	AS SELECT Automobilis.Automobilio_id, Automobilis.Marke, Automobilis.Modelis,
				 COUNT(Nuomos_sutartis.Sutarties_nr) AS Nuomu_Kiekis
  FROM Nuomos_sutartis, Automobilis
  WHERE Nuomos_sutartis.Automobilis = Automobilis.Automobilio_id
  GROUP BY Automobilis.Automobilio_id, Automobilis.Marke, Automobilis.Modelis
  ORDER BY Nuomu_Kiekis DESC;

--REFRESH MATERIALIZED VIEW PopuliariausiAutomobiliai;





